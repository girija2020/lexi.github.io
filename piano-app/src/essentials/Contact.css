/* Contact.css */
/* debug + persistent visibility changes */
html, body, #root {
  overflow: visible !important;
}

/* ensure page container doesn't clip */
.contact-page, .circle-stage, .words-ring {
  overflow: visible !important;
}

/* keep ring and words above most things for visibility */
.words-ring {
  z-index: 9998 !important;
  opacity: 1 !important;
  visibility: visible !important;
  animation-play-state: running !important; /* or 'paused' to debug */
  /* debug outline to verify geometry â€” remove when happy */
  outline: 2px dashed hotpink;
}

/* make words clearly visible (contrast) while debugging */
.ring-word {
  z-index: 9999 !important;
  background: rgb(249, 173, 231) !important;
  color: rgb(0, 0, 0) !important;
  box-shadow: 0 10px 30px rgba(0,0,0,0.25) !important;
  animation-play-state: paused !important; /* pause motion while debugging */
}

/* make card visible in relation to ring */
.contact-card {
  z-index: 10000 !important; /* card above ring center if desired */
  outline: 2px dashed lime !important;
}

/* page container - ensures centered content below fixed navbar */
.contact-page {
  min-height: calc(100vh - var(--navbar-height));
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: var(--navbar-height); /* pushes content below fixed navbar */
  box-sizing: border-box;
  /* background: linear-gradient(180deg, #060606 0%, #050505 100%); */
  font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue",
    Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}


/* make sure :root has a sane default */
:root {
  --navbar-height: 70px;
  --ring-radius: 200px; /* increased so words are clearly outside the card */
}

/* stage that holds the ring + card */
.circle-stage {
  position: relative;
  width: calc(var(--ring-radius) * 2 + 300px);
  height: calc(var(--ring-radius) * 2 + 60px); /* ensure vertical room */
  max-width: 92vw;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* ring of words (rotates slowly) */
.words-ring {
  position: absolute;
  width: calc(var(--ring-radius) * 2);
  height: calc(var(--ring-radius) * 2);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  animation: spin 28s linear infinite;
  z-index: 2;                 /* sit above background but below the card if needed */
  mix-blend-mode: normal;
  /* debug helper - uncomment to see ring shape */
/*  outline: 2px dashed magenta; */
}

/* each word positioned on the ring */
.ring-word {
  --word-font-size: 0.70rem;
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: center;
  font-size: var(--word-font-size);
  font-weight: 700;
  letter-spacing: 0.06em;
  text-transform: lowercase;
  color: #9fa707; /* white text */
  padding: 6px 10px;
  border-radius: 999px;
  background: linear-gradient(90deg, rgba(128,0,255,0.18), rgba(255,255,255,0.02));
  backdrop-filter: blur(2px);
  box-shadow: 0 8px 22px rgba(99, 43, 255, 0.10);
  text-shadow: 0 2px 8px rgba(0,0,0,0.22); /* help visibility on light BG */
  transform: translate(-50%, -50%); /* baseline; overridden inline per-word */
  animation: float 3.6s ease-in-out infinite alternate;
  z-index: 3; /* keep words visible above ring background */
}


/* increase contrast for small screens too */
@media (max-width: 680px) {
  :root { --ring-radius: 120px; }
  .contact-card { width: 80vw; padding: 10px; }
  .field-value { min-width: 140px; }
}

/* ensure the card sits above the ring center but does not hide outer words */
.contact-card {
  width: 300px;
  background: linear-gradient(180deg, rgba(255,255,255,0.98), rgba(250,250,255,0.95));
  border-radius: 13px;
  box-shadow: 0 10px 40px rgba(43, 8, 74, 0.12);
  padding: 20px;
  z-index: 10; /* keep card above ring center */
  text-align: center;
  border: 1px solid rgba(128, 0, 255, 0.06);
}

/* Optional: add a faint outer ring border so the circle is visible */
.words-ring:before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  box-shadow: 0 0 0 1px rgba(128, 0, 255, 0.06) inset;
  pointer-events: none;
}

/* slight variation in movement so they don't look uniform */
.ring-word:nth-child(odd) { animation-duration: 4.2s; }
.ring-word:nth-child(3n) { animation-duration: 3s; }
.ring-word:nth-child(4n) { animation-duration: 5s; }


/* card title */
.card-title {
  margin: 0 0 12px 0;
  font-size: 1.25rem;
  letter-spacing: -0.01em;
  color: #2b0446;
}

/* fields container */
.fields {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-top: 6px;
}

/* field animation and layout */
.field {
  opacity: 0;
  transform: translateY(16px);
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: slideIn 420ms ease forwards;
  will-change: transform, opacity;
}

.field.in {
  /* presence of .in is what triggers the animation, delay controlled inline */
}

.field-label {
  font-size: 0.78rem;
  color: #6e577a;
  margin-bottom: 4px;
}

.field-value {
  font-size: 0.95rem;
  color: #1a0824;
  font-weight: 600;
  background: linear-gradient(90deg, rgba(128,0,255,0.06), rgba(255,255,255,0));
  padding: 8px 12px;
  border-radius: 10px;
  min-width: 240px;
  max-width: 100%;
  word-break: break-word;
  border: 1px solid rgba(128, 0, 255, 0.05);
}

/* CTA row */
.cta-row {
  display: flex;
  gap: 10px;
  justify-content: center;
  margin-top: 14px;
}

.btn {
  text-decoration: none;
  padding: 8px 14px;
  border-radius: 10px;
  font-weight: 600;
  background: linear-gradient(90deg, #8b2eff, #b55bff);
  color: white;
  box-shadow: 0 8px 22px rgba(141, 55, 255, 0.14);
  border: none;
}

.btn.ghost {
  background: transparent;
  color: #6e577a;
  border: 1px solid rgba(99, 43, 255, 0.08);
  box-shadow: none;
}

/* ---------------- Animations ---------------- */

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(16px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  from {
    transform: translate(-50%, -50%) translateY(-6px) scale(1);
  }
  to {
    transform: translate(-50%, -50%) translateY(6px) scale(1.03);
  }
}

@keyframes spin {
  from { transform: translate(-50%, -50%) rotate(0deg); }
  to { transform: translate(-50%, -50%) rotate(360deg); }
}